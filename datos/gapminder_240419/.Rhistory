#sujNames <- as.character(unique(rawDataAdapt$IDsuj))
sujNames = c("sujSyM_098","sujSyM_106","sujSyM_107","sujSyM_117","sujSyM_108","sujSyM_131","sujSyM_130",
"sujSyM_101","sujSyM_100","sujSyM_142","sujSyM_150","sujSyM_129","sujSyM_134","sujSyM_103",
"sujSyM_140", "sujSyM_137","sujSyM_148","sujSyM_143","sujSyM_146","sujSyM_155","sujSyM_162")
qplot(x=rawDataAdapt$IDsuj, y=rawDataAdapt$Error, geom = "boxplot",
xlab = 'Sujetos',ylab = 'Boxplots errores')
qplot(x=rawDataAdapt$IDsuj, y=rawDataAdapt$Error, geom = "point",
xlab = 'Sujetos',ylab = 'Errores')
#A los de la Sesion = AdaptA le sumo -30
rawDataAdapt$Error[rawDataAdapt$Sesion=="AdaptA"] = rawDataAdapt$Error[rawDataAdapt$Sesion=="AdaptA"] - magPert
#A los de la Sesion = AdaptB le sumo 30
rawDataAdapt$Error[rawDataAdapt$Sesion=="AdaptB"] = rawDataAdapt$Error[rawDataAdapt$Sesion=="AdaptB"] + magPert
cleanDataAdapt<-rawDataAdapt
index <- cleanDataAdapt$Error > 100
cleanDataAdapt$Error[index] <- NaN
index <- cleanDataAdapt$Error < -100
cleanDataAdapt$Error[index] <- NaN
#for (i in 1:length(sujNames)){
i=1
print(ggplot(cleanDataAdapt[cleanDataAdapt$IDsuj==sujNames[i],], aes(x=1:cantTotalTrials, y=Error,
colour=Sesion))+
geom_point()+geom_point()+xlab(sujNames[i]) +
geom_hline(yintercept = magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = -magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = 0, color='darkgreen',linetype=2)) +
ylim(-180,180) )
cleanDataAdapt<-rawDataAdapt
index <- cleanDataAdapt$Error > 100
cleanDataAdapt$Error[index] <- NaN
index <- cleanDataAdapt$Error < -100
cleanDataAdapt$Error[index] <- NaN
#for (i in 1:length(sujNames)){
i=1
print(ggplot(cleanDataAdapt[cleanDataAdapt$IDsuj==sujNames[i],], aes(x=1:cantTotalTrials, y=Error,
colour=Sesion))+
geom_point()+geom_point()+xlab(sujNames[i]) +
geom_hline(yintercept = magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = -magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = 0, color='darkgreen',linetype=2) +
ylim(-180,180) )
cantTotalTrials = 7*88+16+6*88+16+16+16+3*88 #siguiendo el protocolo usado TODO: falta lo del dia 14
#for (i in 1:length(sujNames)){
i=1
data = rawDataAdapt[rawDataAdapt$IDsuj==sujNames[i],]
grupo = unique(data$Grupo)
print( ggplot(data=data, aes(x=1:cantTotalTrials, y=Error, colour=Sesion))+
geom_point()+geom_point()+
xlab(paste("ID:",sujNames[i],"- Grupo:",as.character(grupo),sep = " "))+
ylim(-180,180) +
geom_hline(yintercept = magPert, color='darkgreen',linetype=2)+
geom_hline(yintercept = -magPert, color='darkgreen',linetype=2)+
geom_hline(yintercept = 0, color='darkgreen',linetype=2))
#}
cleanDataAdapt<-rawDataAdapt
index <- cleanDataAdapt$Error > 100
cleanDataAdapt$Error[index] <- NaN
index <- cleanDataAdapt$Error < -100
cleanDataAdapt$Error[index] <- NaN
#for (i in 1:length(sujNames)){
i=1
print(ggplot(cleanDataAdapt[cleanDataAdapt$IDsuj==sujNames[i],], aes(x=1:cantTotalTrials, y=Error,
colour=Sesion))+
geom_point()+geom_point()+xlab(sujNames[i]) +
geom_hline(yintercept = magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = -magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = 0, color='darkgreen',linetype=2) +
ylim(-180,180) )
#}
clc
aux=rawDataAdapt$==cleanDataAdapt$Error
aux=rawDataAdapt$Error!=cleanDataAdapt$Error
aux
sum(aux)
sum(aux,na.rm=TRUE)
View(cleanDataAdapt)
rawDataAdapt$Error[1]!=cleanDataAdapt$Error[1]
rawDataAdapt$Error[1]!=cleanDataAdapt$Error[2]
rawDataAdapt$Error[1]!=NA
aux=!(is.na(rawDataAdapt$Error)&is.na(cleanDataAdapt$Error))
aux
aux=(is.na(rawDataAdapt$Error)&is.na(cleanDataAdapt$Error))
aux
sum(aux,na.rm = TRUE)
aux=!(is.na(rawDataAdapt$Error)&is.na(cleanDataAdapt$Error))
sum(aux,na.rm = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "E:/Exp_Suenio_y_Memorias_Interferencia_2019_ASolano/Resultados_Conducta/DatosCrudos_CURSORSPACE")
library(ggplot2)
library(plotly)
library(ggpubr)
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
##----------------------------------------------------------------
##Funcion para Calulcar Mediana y +- X MAD (Median Absolute Deviation)
median_Xmad <- function(x,mult){
#x=vector numerico
dataOut = data.frame(y = median(x),
ymin = median(x)-mult*mad(x),
ymax = median(x)+mult*mad(x))
return(dataOut)
}
cantTargets <- 8
cantCiclosXbloque <- 11
magPert <- 30 #magnitud de la perturbacion en valor absoluto, el signo depende de la Sesion
rawDataAdapt<- read.csv("./RawTableCursorspaceAllSubjects.csv", header = TRUE, sep = ",", dec = ".")
rawDataAdapt<- read.csv("RawTableCursorspaceAllSubjects.csv", header = TRUE, sep = ",", dec = ".")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "E:/Exp_Suenio_y_Memorias_Interferencia_2019_ASolano/Resultados_Conducta/DatosCrudos_CURSORSPACE")
rawDataAdapt<- read.csv("RawTableCursorspaceAllSubjects.csv", header = TRUE, sep = ",", dec = ".")
#Ordeno los factores correspondiente a la variable 'Sesion' para que siga la logica del experimento
rawDataAdapt$Sesion = factor(rawDataAdapt$Sesion,levels(rawDataAdapt$Sesion)[c(7,1,5,2,6,4,3,8)])
#sujNames <- as.character(unique(rawDataAdapt$IDsuj))
sujNames = c("sujSyM_098","sujSyM_106","sujSyM_107","sujSyM_117","sujSyM_108","sujSyM_131","sujSyM_130",
"sujSyM_101","sujSyM_100","sujSyM_142","sujSyM_150","sujSyM_129","sujSyM_134","sujSyM_103",
"sujSyM_140", "sujSyM_137","sujSyM_148","sujSyM_143","sujSyM_146","sujSyM_155","sujSyM_162")
qplot(x=rawDataAdapt$IDsuj, y=rawDataAdapt$Error, geom = "boxplot",
xlab = 'Sujetos',ylab = 'Boxplots errores')
qplot(x=rawDataAdapt$IDsuj, y=rawDataAdapt$Error, geom = "point",
xlab = 'Sujetos',ylab = 'Errores')
qplot(x=rawDataAdapt$IDsuj, y=rawDataAdapt$Error, geom = "boxplot",
xlab = 'Sujetos',ylab = 'Boxplots errores')+
facet_grid(Grupo~.)
View(rawDataAdapt)
qplot(x=rawDataAdapt$IDsuj, y=rawDataAdapt$Error, geom = "boxplot",
xlab = 'Sujetos',ylab = 'Boxplots errores',facets = Grupo)
qplot(x=rawDataAdapt$IDsuj, y=rawDataAdapt$Error, geom = "boxplot",
xlab = 'Sujetos',ylab = 'Boxplots errores',facets = rawDataAdapt$Grupo)
qplot(x=rawDataAdapt$IDsuj, y=rawDataAdapt$Error, geom = "boxplot",
xlab = 'Sujetos',ylab = 'Boxplots errores',facets = ~rawDataAdapt$Grupo)
qplot(x=IDsuj, y=Error, data=rawDataAdapt,geom = "boxplot",
xlab = 'Sujetos',ylab = 'Boxplots errores')#,facets = ~rawDataAdapt$Grupo)
qplot(x=rawDataAdapt$IDsuj, y=rawDataAdapt$Error, geom = "point",
xlab = 'Sujetos',ylab = 'Errores')
qplot(x=IDsuj, y=Error, data=rawDataAdapt,geom = "boxplot",
xlab = 'Sujetos',ylab = 'Boxplots errores',facets = ~Grupo)
qplot(x=rawDataAdapt$IDsuj, y=rawDataAdapt$Error, geom = "point",
xlab = 'Sujetos',ylab = 'Errores')
qplot(x=IDsuj, y=Error, data=rawDataAdapt,geom = "boxplot",
xlab = 'Sujetos',ylab = 'Boxplots errores',facets = ~Grupo)
qplot(x=IDsuj, y=Error,data=rawDataAdapt, geom = "point",
xlab = 'Sujetos',ylab = 'Errores',facets=~Grupo)
#A los de la Sesion = AdaptA le sumo -30
rawDataAdapt$Error[rawDataAdapt$Sesion=="AdaptA"] = rawDataAdapt$Error[rawDataAdapt$Sesion=="AdaptA"] - magPert
#A los de la Sesion = AdaptB le sumo 30
rawDataAdapt$Error[rawDataAdapt$Sesion=="AdaptB"] = rawDataAdapt$Error[rawDataAdapt$Sesion=="AdaptB"] + magPert
cantTotalTrials = 7*88+16+6*88+16+16+16+3*88 #siguiendo el protocolo usado TODO: falta lo del dia 14
#for (i in 1:length(sujNames)){
i=1
data = rawDataAdapt[rawDataAdapt$IDsuj==sujNames[i],]
grupo = unique(data$Grupo)
print( ggplot(data=data, aes(x=1:cantTotalTrials, y=Error, colour=Sesion))+
geom_point()+geom_point()+
xlab(paste("ID:",sujNames[i],"- Grupo:",as.character(grupo),sep = " "))+
ylim(-180,180) +
geom_hline(yintercept = magPert, color='darkgreen',linetype=2)+
geom_hline(yintercept = -magPert, color='darkgreen',linetype=2)+
geom_hline(yintercept = 0, color='darkgreen',linetype=2))
#}
cleanDataAdapt<-rawDataAdapt
index <- cleanDataAdapt$Error > 100
cleanDataAdapt$Error[index] <- NaN
index <- cleanDataAdapt$Error < -100
cleanDataAdapt$Error[index] <- NaN
#for (i in 1:length(sujNames)){
i=1
print(ggplot(cleanDataAdapt[cleanDataAdapt$IDsuj==sujNames[i],], aes(x=1:cantTotalTrials, y=Error,
colour=Sesion))+
geom_point()+geom_point()+xlab(sujNames[i]) +
geom_hline(yintercept = magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = -magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = 0, color='darkgreen',linetype=2) +
ylim(-180,180) )
#}
mediasXcicloXsuj <- aggregate(cleanDataAdapt$Error,
by = list(cleanDataAdapt$Sesion, cleanDataAdapt$numCiclo,
cleanDataAdapt$IDsuj,cleanDataAdapt$numCicloAbs),
FUN = mean, na.rm = TRUE)
colnames(mediasXcicloXsuj) <- c("Sesion", "numCiclo", "IDsuj", "numCicloGrup","Media")
mediasXcicloXsuj <- mediasXcicloXsuj[order(mediasXcicloXsuj$IDsuj),] #ordeno datos por Sujeto
stdXcicloXsuj <- aggregate(cleanDataAdapt$Error, by = list(cleanDataAdapt$Sesion, cleanDataAdapt$numCiclo,
cleanDataAdapt$IDsuj,cleanDataAdapt$numCicloAbs),
FUN = sd, na.rm = TRUE)
colnames(stdXcicloXsuj) <- c("Sesion", "numCiclo", "IDsuj", "numCicloGrup","StdDev")
stdXcicloXsuj <- stdXcicloXsuj[order(stdXcicloXsuj$IDsuj),] #ordeno datos por Sujeto
cantTotalCiclos = 7*11+2+6*11+2+2
#for (i in 1:length(sujNames)){
print(
ggplot(mediasXcicloXsuj[mediasXcicloXsuj$IDsuj==sujNames[i],], aes(x = 1:cantTotalCiclos, y = Media,
colour = Sesion))+
geom_line(size=1) + geom_point(size=2) + xlab(sujNames[i])+ ylim(-80,100)+
geom_ribbon(aes(ymin=Media-stdXcicloXsuj[stdXcicloXsuj$IDsuj==sujNames[i],]$StdDev,
ymax=Media+stdXcicloXsuj[stdXcicloXsuj$IDsuj==sujNames[i],]$StdDev), , alpha=0.2 )+
geom_hline(yintercept = magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = -magPert, color='darkgreen',linetype=2) +
geom_vline(xintercept = c(seq(1,6*cantCiclosXbloque,cantCiclosXbloque),
6*cantCiclosXbloque+1,6*cantCiclosXbloque+2,
6*cantCiclosXbloque+2+cantCiclosXbloque,
(7*11+2)+seq(1,5*cantCiclosXbloque,cantCiclosXbloque),
(7*11+2)+5*cantCiclosXbloque+1,(7*11+2)+5*cantCiclosXbloque+2,
(7*11+2)+5*cantCiclosXbloque+2+cantCiclosXbloque,
(13*11+4+1),(13*11+4+2) ),
linetype=2,color="gray50")
) #fin de print
cantTotalCiclos = 7*11+2+6*11+2+2+2+3*11
#for (i in 1:length(sujNames)){
print(
ggplot(mediasXcicloXsuj[mediasXcicloXsuj$IDsuj==sujNames[i],], aes(x = 1:cantTotalCiclos, y = Media,
colour = Sesion))+
geom_line(size=1) + geom_point(size=2) + xlab(sujNames[i])+ ylim(-80,100)+
geom_ribbon(aes(ymin=Media-stdXcicloXsuj[stdXcicloXsuj$IDsuj==sujNames[i],]$StdDev,
ymax=Media+stdXcicloXsuj[stdXcicloXsuj$IDsuj==sujNames[i],]$StdDev), , alpha=0.2 )+
geom_hline(yintercept = magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = -magPert, color='darkgreen',linetype=2) +
geom_vline(xintercept = c(seq(1,6*cantCiclosXbloque,cantCiclosXbloque),
6*cantCiclosXbloque+1,6*cantCiclosXbloque+2,
6*cantCiclosXbloque+2+cantCiclosXbloque,
(7*11+2)+seq(1,5*cantCiclosXbloque,cantCiclosXbloque),
(7*11+2)+5*cantCiclosXbloque+1,(7*11+2)+5*cantCiclosXbloque+2,
(7*11+2)+5*cantCiclosXbloque+2+cantCiclosXbloque,
(13*11+4+1),(13*11+4+2) ),
linetype=2,color="gray50")
) #fin de print
#}
cantTotalCiclos = 7*11+2+6*11+2+2+2+3*11
#for (i in 1:length(sujNames)){
print(
ggplot(mediasXcicloXsuj[mediasXcicloXsuj$IDsuj==sujNames[i],], aes(x = 1:cantTotalCiclos, y = Media,
colour = Sesion))+
geom_line(size=1) + geom_point(size=2) + xlab(sujNames[i])+ ylim(-80,100)+
geom_ribbon(aes(ymin=Media-stdXcicloXsuj[stdXcicloXsuj$IDsuj==sujNames[i],]$StdDev,
ymax=Media+stdXcicloXsuj[stdXcicloXsuj$IDsuj==sujNames[i],]$StdDev), , alpha=0.2 )+
geom_hline(yintercept = magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = -magPert, color='darkgreen',linetype=2) +
geom_vline(xintercept = c(seq(1,6*cantCiclosXbloque,cantCiclosXbloque),
6*cantCiclosXbloque+1,6*cantCiclosXbloque+2,
6*cantCiclosXbloque+2+cantCiclosXbloque,
(7*11+2)+seq(1,5*cantCiclosXbloque,cantCiclosXbloque),
(7*11+2)+5*cantCiclosXbloque+1,(7*11+2)+5*cantCiclosXbloque+2,
(7*11+2)+5*cantCiclosXbloque+2+cantCiclosXbloque,
(13*11+4+1),(13*11+4+2),(13*11+4+3),(13*11+4+4) ),
linetype=2,color="gray50")
) #fin de print
#}
cantTotalCiclos = 7*11+2+6*11+2+2+2+3*11
#for (i in 1:length(sujNames)){
print(
ggplot(mediasXcicloXsuj[mediasXcicloXsuj$IDsuj==sujNames[i],], aes(x = 1:cantTotalCiclos, y = Media,
colour = Sesion))+
geom_line(size=1) + geom_point(size=2) + xlab(sujNames[i])+ ylim(-80,100)+
geom_ribbon(aes(ymin=Media-stdXcicloXsuj[stdXcicloXsuj$IDsuj==sujNames[i],]$StdDev,
ymax=Media+stdXcicloXsuj[stdXcicloXsuj$IDsuj==sujNames[i],]$StdDev), , alpha=0.2 )+
geom_hline(yintercept = magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = -magPert, color='darkgreen',linetype=2) +
geom_vline(xintercept = c(seq(1,6*cantCiclosXbloque,cantCiclosXbloque),
6*cantCiclosXbloque+1,6*cantCiclosXbloque+2,
6*cantCiclosXbloque+2+cantCiclosXbloque,
(7*11+2)+seq(1,5*cantCiclosXbloque,cantCiclosXbloque),
(7*11+2)+5*cantCiclosXbloque+1,(7*11+2)+5*cantCiclosXbloque+2,
(7*11+2)+5*cantCiclosXbloque+2+cantCiclosXbloque,
(13*11+4+1),(13*11+4+2),(13*11+4+3),(13*11+4+4),
(13*11+4+5),(13*11+4+5+11),(13*11+4+5+2*11),(13*11+4+5+3*11)),
linetype=2,color="gray50")
) #fin de print
#}
cantTotalCiclos = 7*11+2+6*11+2+2+2+3*11
#for (i in 1:length(sujNames)){
print(
ggplot(mediasXcicloXsuj[mediasXcicloXsuj$IDsuj==sujNames[i],], aes(x = 1:cantTotalCiclos, y = Media,
colour = Sesion))+
geom_line(size=1) + geom_point(size=2) + xlab(sujNames[i])+ ylim(-80,100)+
geom_ribbon(aes(ymin=Media-stdXcicloXsuj[stdXcicloXsuj$IDsuj==sujNames[i],]$StdDev,
ymax=Media+stdXcicloXsuj[stdXcicloXsuj$IDsuj==sujNames[i],]$StdDev), , alpha=0.2 )+
geom_hline(yintercept = magPert, color='darkgreen',linetype=2) +
geom_hline(yintercept = -magPert, color='darkgreen',linetype=2) +
geom_vline(xintercept = c(seq(1,6*cantCiclosXbloque,cantCiclosXbloque),
6*cantCiclosXbloque+1,6*cantCiclosXbloque+2,
6*cantCiclosXbloque+2+cantCiclosXbloque,
(7*11+2)+seq(1,5*cantCiclosXbloque,cantCiclosXbloque),
(7*11+2)+5*cantCiclosXbloque+1,(7*11+2)+5*cantCiclosXbloque+2,
(7*11+2)+5*cantCiclosXbloque+2+cantCiclosXbloque,
(13*11+4+1),(13*11+4+2),(13*11+4+3),(13*11+4+4),
(13*11+4+5),(13*11+4+5+11),(13*11+4+5+2*11)),
linetype=2,color="gray50")
) #fin de print
#}
rawDataChannDia2 = rawDataAdapt[rawDataAdapt$Sesion=='Chann2',]
#Obtengo la Mediana por ciclo por sujeto
medianaXcicloDia2 = aggregate(rawDataChannDia2$Error,
by=list(rawDataChannDia2$IDsuj,rawDataChannDia2$Sesion,rawDataChannDia2$numCiclo,rawDataChannDia2$Grupo),
FUN=median,na.rm=T)
colnames(medianaXcicloDia2) = c("IDsuj","Sesion","numCiclo","Grupo","Mediana")
ggplot(medianaXcicloDia2,aes(x=numCiclo,y=Mediana,colour=IDsuj)) +
geom_point() + geom_line() +
ylim(-magPert,magPert) +
facet_grid(Grupo~.)
ggplot(medianaXcicloDia2,aes(x=numCiclo,y=Mediana)) +
geom_point() +
stat_summary(fun.data = "median_Xmad", fun.args = list(3), geom = "errorbar") +
stat_summary(fun.y = median, geom = "point",shape=23,size=2.5,colour="red1") +
ylim(-magPert,magPert)+
facet_grid(Grupo~.)
ggplot(rawDataChannDia2,aes(x=numCiclo,y=Error)) +
geom_point() +
facet_grid(IDsuj~.)
rawDataChannDia14 = rawDataAdapt[rawDataAdapt$Sesion=='Chann14',]
#Obtengo la Mediana por ciclo por sujeto
medianaXcicloDia14 = aggregate(rawDataChannDia14$Error,
by=list(rawDataChannDia14$IDsuj,rawDataChannDia14$Sesion,rawDataChannDia14$numCiclo,rawDataChannDia14$Grupo),
FUN=median,na.rm=T)
colnames(medianaXcicloDia14) = c("IDsuj","Sesion","numCiclo","Grupo","Mediana")
ggplot(medianaXcicloDia14,aes(x=numCiclo,y=Mediana,colour=IDsuj)) +
geom_point() + geom_line() +
ylim(-magPert,magPert) +
facet_grid(Grupo~.)
ggplot(medianaXcicloDia14,aes(x=numCiclo,y=Mediana)) +
geom_point() +
stat_summary(fun.data = "median_Xmad", fun.args = list(3), geom = "errorbar") +
stat_summary(fun.y = median, geom = "point",shape=23,size=2.5,colour="red1") +
ylim(-magPert,magPert)+
facet_grid(Grupo~.)
ggplot(rawDataChannDia14,aes(x=numCiclo,y=Error)) +
geom_point() +
facet_grid(IDsuj~.)
rawDataChannBreaks = rawDataAdapt[rawDataAdapt$Sesion=='ChannA'|rawDataAdapt$Sesion=='ChannB',]
#Obtengo la Mediana por ciclo por sujeto
medianaXcicloBreaks = aggregate(rawDataChannBreaks$Error,
by=list(rawDataChannBreaks$IDsuj,rawDataChannBreaks$Sesion,rawDataChannBreaks$numCiclo),
FUN=median,na.rm=T)
colnames(medianaXcicloBreaks) = c("IDsuj","Sesion","numCiclo","Mediana")
ggplot(medianaXcicloBreaks,aes(x=numCiclo,y=Mediana,colour=IDsuj)) +
geom_point() + geom_line() +
#ylim(-magPert,magPert) +
facet_grid(Sesion~.)
ggplot(medianaXcicloBreaks,aes(x=numCiclo,y=Mediana)) +
geom_point() +
stat_summary(fun.data = "median_Xmad", fun.args = list(3), geom = "errorbar") +
stat_summary(fun.y = median, geom = "point",shape=23,size=2.5,colour="red1") +
#ylim(-magPert,magPert) +
facet_grid(Sesion~.)
install.packages("beeswarm")
library(beeswarm)
beeswarm(Mediana~numCiclo,data=medianaXcicloDia2)
aux=beeswarm(Mediana~numCiclo,data=medianaXcicloDia2)
View(aux)
aux=beeswarm(Mediana~numCiclo*grupo,data=medianaXcicloDia2)
aux=beeswarm(Mediana~numCiclo*Grupo,data=medianaXcicloDia2)
View(aux)
beeswarm(Mediana~numCiclo,data=medianaXcicloDia2)+facet_grid(Grupo~.)
separate(aux, x.orig, sep = "."
)
library(tidyr)
separate(aux, x.orig, sep = ".")
separate(data=aux, col=x.orig, into=c("numCiclo","Grupo"),sep = ".")
aux2=separate(data=aux, col=x.orig, into=c("numCiclo","Grupo"),sep = ".")
View(aux2)
aux2=separate(data=aux, col=x.orig, into=c("numCiclo","Grupo"))
knitr::opts_chunk$set(echo = TRUE)
library(plyr)
library(dplyr)
library(ggplot2)
gapminder = read.csv("gapminder_es.csv")
setwd("D:/RepositoriosGit/datos-de-miercoles/datos/gapminder_240419")
aux=gapminder %>%
filter(pais=="Argentina")
gapminder = read.csv("gapminder_es.csv")
aux=gapminder %>%
filter(pais=="Argentina")
View(gapminder)
unique(gapminder$pais)
ggplot(data=aux) +
#geom_line(aes(x=esperanza_de_vida,y=anio)) +
geom_line(aes(x=anio,y=pib_per_capita))
aux=gapminder %>%
filter(continentes=="Americas")
aux=gapminder %>%
filter(continente=="Americas")
ggplot(data=aux) +
#geom_line(aes(x=esperanza_de_vida,y=anio)) +
geom_line(aes(x=anio,y=pib_per_capita))
View(aux)
ggplot(data=aux) +
#geom_line(aes(x=esperanza_de_vida,y=anio)) +
geom_line(aes(x=anio,y=pib_per_capita,color=pais))
ggplot(data=aux) +
#geom_line(aes(x=esperanza_de_vida,y=anio)) +
geom_line(aes(x=anio,y=pib_per_capita,group=pais))
ggplot(data=aux) +
#geom_line(aes(x=esperanza_de_vida,y=anio)) +
#geom_line(aes(x=anio,y=pib_per_capita,group=pais))
geom_line(aes(x=anio,y=esperanza_de_vida,group=pais))
ggplot(data=aux) +
geom_line(aes(x=esperanza_de_vida,y=pib_per_capita,group=pais)) +
#geom_line(aes(x=anio,y=pib_per_capita,group=pais))
#geom_line(aes(x=anio,y=esperanza_de_vida,group=pais))
ggplot(data=aux) +
geom_line(aes(x=esperanza_de_vida,y=pib_per_capita,group=pais))
#geom_line(aes(x=anio,y=pib_per_capita,group=pais))
#geom_line(aes(x=anio,y=esperanza_de_vida,group=pais))
ggplot(data=aux) +
geom_line(aes(x=esperanza_de_vida,y=pib_per_capita))
#geom_line(aes(x=anio,y=pib_per_capita,group=pais))
#geom_line(aes(x=anio,y=esperanza_de_vida,group=pais))
ggplot(data=aux) +
geom_line(aes(x=esperanza_de_vida,y=pib_per_capita,group=contienente))
ggplot(data=aux) +
geom_line(aes(x=esperanza_de_vida,y=pib_per_capita,group=continente))
#geom_line(aes(x=anio,y=pib_per_capita,group=pais))
#geom_line(aes(x=anio,y=esperanza_de_vida,group=pais))
ggplot(data=aux) +
geom_line(aes(x=esperanza_de_vida,y=pib_per_capita,group=pais))
#geom_line(aes(x=anio,y=pib_per_capita,group=pais))
#geom_line(aes(x=anio,y=esperanza_de_vida,group=pais))
ggplot(data=aux) +
geom_line(aes(x=esperanza_de_vida,y=pib_per_capita,color=pais))
#geom_line(aes(x=anio,y=pib_per_capita,group=pais))
#geom_line(aes(x=anio,y=esperanza_de_vida,group=pais))
gapminder$esperanza_de_vida[end]
gapminder$esperanza_de_vida[1]
gapminder$esperanza_de_vida[-1]
gapminder$esperanza_de_vida[length(pais)]
gapminder$esperanza_de_vida[length(gapminder$esperanza_de_vida)]
aux=gapminder %>%
filter(continente=="Americas")
cambioEsperanzaVida = gapminder %>%
group_by(pais) %>%
mutate(delta = esperanza_de_vida[length(esperanza_de_vida)]-esperanza_de_vida[1])
View(cambioEsperanzaVida)
aux=gapminder %>%
filter(continente=="Americas")
cambioEsperanzaVida = gapminder %>%
group_by(pais) %>%
summarise(delta = esperanza_de_vida[length(esperanza_de_vida)]-esperanza_de_vida[1])
View(cambioEsperanzaVida)
aux=gapminder %>%
filter(continente=="Americas")
cambioMedidas = gapminder %>%
group_by(pais,continente) %>%
summarise(deltaEsperanza = esperanza_de_vida[length(esperanza_de_vida)]-esperanza_de_vida[1],
deltaPIB = pib_per_capita[length(pib_per_capita)]-pib_per_capita[1])
View(cambioMedidas)
rm(cambioEsperanzaVida)
ggplot(data=cambioMedidas) +
geom_line(aes(x=deltaEsperanza,y=deltaPIB,groupContinentes=pais))
ggplot(data=cambioMedidas) +
geom_line(aes(x=deltaEsperanza,y=deltaPIB,group=continente))
ggplot(data=cambioMedidas) +
geom_point(aes(x=deltaEsperanza,y=deltaPIB,group=continente))
ggplot(data=cambioMedidas) +
geom_point(aes(x=deltaEsperanza,y=deltaPIB,color=continente))
ggplot(data=cambioMedidas) +
geom_point(aes(x=deltaEsperanza,y=deltaPIB,color=continente)) +
facet_grid(~continente)
ggplot(data=cambioMedidas) +
geom_point(aes(x=deltaPIB,y=deltaEsperanza,color=continente)) +
facet_grid(~continente)
ggplot(data=cambioMedidas) +
geom_point(aes(x=deltaPIB,y=deltaEsperanza,color=continente)) #+
#facet_grid(~continente)
ggplot(data=cambioMedidas) +
geom_point(aes(x=deltaPIB,y=deltaEsperanza,color=continente)) #+
#facet_grid(~continente)
ggplot(data=gapminder) +
geom_point(aes(x=pib_per_capita,y=esperanza_de_vida,color=continente)) #+
#facet_grid(~continente)
ggplot(data=cambioMedidas) +
geom_point(aes(x=deltaPIB,y=deltaEsperanza,color=continente)) #+
#facet_grid(~continente)
ggplot(data=gapminder) +
geom_point(aes(x=pib_per_capita,y=esperanza_de_vida,color=continente)) #+
facet_grid(~continente)
ggplot(data=cambioMedidas) +
geom_point(aes(x=deltaPIB,y=deltaEsperanza,color=continente)) #+
#facet_grid(~continente)
ggplot(data=gapminder) +
geom_point(aes(x=pib_per_capita,y=esperanza_de_vida,color=continente)) +
facet_grid(~continente)
